//https://leetcode.com/problems/number-of-islands/


class Solution {
public:

    int numIslands(vector<vector<char>>& grid) {
        int result = 0;
        queue<pair<int, int> > q;
        int dir_x[] = {1, -1, 0, 0};
        int dir_y[] = {0, 0, -1, 1};
        for (int i = 0; i < grid.size(); ++i) {
            for (int j = 0; j < grid[i].size(); ++j) {
                if ('0' == grid[i][j]) continue;
                result += 1;
                q.push(make_pair(i, j));
                while (not q.empty()) {
                    int x = q.front().first;
                    int y = q.front().second;
                    q.pop();
                    if (x < 0 || x >= grid.size()) continue;
                    if (y < 0 || y >= grid[0].size()) continue;
                    if ('0' == grid[x][y]) continue;
                    grid[x][y] = '0';
                    for(int k = 0; k < 4; ++k) {
                        q.push(make_pair(x + dir_x[k], y + dir_y[k]));
                    }
                }
            }
        }
        return result;
    }
};

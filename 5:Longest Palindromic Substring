

// https://leetcode.com/problems/longest-palindromic-substring/

//有时地方总是把变量名给打错了。不能一次性的ac。

class Solution {
public:
    int findLongestPS(string& s, int first, int last) {
        while (first <= last && first >= 0 && last < s.length() && s[first] == s[last]) {
                first -= 1;
                last += 1;
        }
        return last - first - 1;
    }
    string longestPalindrome(string s) {
        if (s.length() < 1) return s;
        int longestStart = 0;
        int max_len = 1;
        for (int i = 0; i < s.length(); ++i) {
            int len = findLongestPS(s, i, i);
            if (len > max_len) {
                longestStart =  i - len / 2; 
                max_len = len;
            }
            len = findLongestPS(s, i, i + 1);
            if (len > max_len) {
                longestStart = i - len / 2 + 1;
                max_len = len;
            }
        }
        return s.substr(longestStart, max_len);
    }
};



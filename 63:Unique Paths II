//https://leetcode.com/problems/unique-paths-ii/



//写得不是很快



class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        if (obstacleGrid.size() < 1 && obstacleGrid[0].size() < 1) return 0;
        vector<vector<int> > matrix(obstacleGrid.size(), vector<int>(obstacleGrid[0].size(), 0));
        matrix[0][0] = not obstacleGrid[0][0];
        for (int i = 1; i < matrix.size(); ++i) {
            if (not obstacleGrid[i][0] && matrix[i - 1][0])
                matrix[i][0] = 1;
        }
        for (int i = 1; i < matrix[0].size(); ++i) {
            if (not obstacleGrid[0][i] && matrix[0][i - 1])
                matrix[0][i] = 1;
        }
        for (int i = 1; i < matrix.size(); ++i) {
            for (int j = 1; j < matrix[0].size(); ++j) {
                if (not obstacleGrid[i][j])
                    matrix[i][j] += matrix[i - 1][j] + matrix[i][j - 1];
            }
        }
        return matrix[matrix.size() - 1][matrix[0].size() - 1];
    }
};

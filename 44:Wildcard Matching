
//https://leetcode.com/problems/wildcard-matching/


//这个也很重要，和正则的区别是这个有些像linux下的路径配对！！！


class Solution {
public:
    bool isMatch(string s, string p) {
        int i = 0;
        int j = 0;  
        int s_match_star = -1;
        int p_star = -1;
        while(i < s.size()){  
            if('*' == p[j]){
                while(p[j] == '*') ++j;  
                p_star = j - 1;//记录‘*’号所在位置  
                s_match_star = i;//s中，对应于p中‘*’所出现的值 
                continue;
            }  
            if('?' == p[j] || s[i] == p[j]){
                ++i;  
                ++j;
                continue;
            } 
            if(-1 == p_star) return false;//不存在‘*’号，则不匹配  
            j = p_star + 1;  
            i = ++s_match_star; 
        }
        while(j < p.size() && '*' == p[j]) ++j;  
        return p.size() == j;
    }
};

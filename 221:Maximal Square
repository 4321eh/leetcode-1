//https://leetcode.com/problems/maximal-square/

//dp 时，当前为1时，dp值至少为1的，这个在做的时候忘了。wa了一次




class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        if (matrix.size() < 1) return 0;
        vector<vector<int> > dp(matrix.size(), vector<int>(matrix[0].size(), 0));
        int result = 0;
        for (int i = 0; i < dp.size(); ++i) {
            if ('1' == matrix[i][0]) dp[i][0] = 1;
        }
        for (int i = 0; i < dp[0].size(); ++i) {
            if ('1' == matrix[0][i]) dp[0][i] = 1;
        }
        for (int i = 1; i < dp.size(); ++i) {
            for (int j = 1; j < dp[i].size(); ++j) {
                if ('0' == matrix[i][j]) {
                    dp[i][j] = 0;
                    continue;
                }
                int area = min(dp[i][j - 1], dp[i - 1][j]);
                if (area < 1) {
                    dp[i][j] = 1;
                    continue;
                }
                int len = sqrt(area);
                if ('0' == matrix[i - len][j - len]) {
                    dp[i][j] = area;
                    continue;
                }
                dp[i][j] = (len + 1) * (len + 1);
            }
        }
        
        for (int i = 0; i < dp.size(); ++i)
            for (int j = 0; j < dp[i].size(); ++j)
                result = max(result, dp[i][j]);
        return result;
    }
};

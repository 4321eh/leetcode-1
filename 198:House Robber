//https://leetcode.com/problems/house-robber/

//!!!!!!!!!!!!!!!!!!!!!!!!!!


class Solution {
public:
    int rob(vector<int>& nums) {
        if (nums.size() < 1) return 0;
        if (nums.size() < 2) return nums[0];
        vector<int> result(nums.size(), 0);
        result[0] = nums[0];
        result[1] = max(nums[0], nums[1]);
        for (int i = 2; i < nums.size(); ++i) {
            result[i] = max(result[i - 1], + result[i - 2] + nums[i]);
        }
        return max(result[nums.size() - 1], result[nums.size() - 2]);
    }
};


class Solution {
public:
    int rob(vector<int>& nums) {
        if (nums.size() < 1) return 0;
        if (nums.size() < 2) return nums[0];
        nums[1] = max(nums[0], nums[1]);
        for (int i = 2; i < nums.size(); ++i) {
            nums[i] = max(nums[i - 1], + nums[i - 2] + nums[i]);
        }
        return max(nums[nums.size() - 1], nums[nums.size() - 2]);
    }
};

//https://leetcode.com/problems/maximum-gap/

//做了好久啊。

class Solution {
public:
    
    int maximumGap(vector<int>& nums) {
        if (nums.size() < 2) return 0;
        int max_value = nums[0];
        int min_value = nums[0];
        for (int i = 1; i < nums.size(); ++i) {
            max_value = max(max_value, nums[i]);
            min_value = min(min_value, nums[i]);
        }
        int bucket_gap = (max_value - min_value) / nums.size() + 1;
        vector<pair<int,int> > buckets(nums.size() + 1, make_pair(0, -1));
        for (int i = 0; i < nums.size(); ++i) {
            int id = (nums[i] - min_value) / bucket_gap;
            if (buckets[id].first > buckets[id].second) {
                buckets[id].first = buckets[id].second = nums[i];
                continue;
            }
            buckets[id].first =  min(buckets[id].first, nums[i]);
            buckets[id].second = max(buckets[id].second, nums[i]);
        }
        int result = 0;
        int last = min_value;
        for (int i = 0; i < nums.size() + 1; ++i) {
            if (buckets[i].first > buckets[i].second) continue;
            result = max(result, buckets[i].second - buckets[i].first);
            result = max(result, buckets[i].first - last);
            last = buckets[i].second;
        }
        return result;
    }
};

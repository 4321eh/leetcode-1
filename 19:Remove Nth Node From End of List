//https://leetcode.com/problems/remove-nth-node-from-end-of-list/


// æ‰‹å¿«


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverse(ListNode* head) {
        if (NULL == head || NULL == head->next) return head;
        ListNode* p = reverse(head->next);
        head->next->next = head;
        head->next = NULL;
        return p;
    }
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* reverseHead = reverse(head);
        if (1 == n) return reverse(reverseHead->next);
        ListNode* p = reverseHead;
        for (int i = 0; i < n - 2 && p; ++i) {
            p = p->next;
        }
        if (p && p->next)
            p->next = p->next->next;
        return reverse(reverseHead);
    }
};

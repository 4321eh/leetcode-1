//https://leetcode.com/problems/add-two-numbers/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverse(ListNode* head) {
        if (NULL == head || NULL == head->next) return head;
        ListNode* p = reverse(head->next);
        head->next->next = head;
        head->next = NULL;
        return p;
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if (NULL == l1) return l2;
        if (NULL == l2) return l1;
        //l1 = reverse(l1);
        //l2 = reverse(l2);
        int last = 0;
        ListNode* p1 = l1;
        ListNode* p2 = l2;
        ListNode* newHead = NULL;
        while (p1 && p2) {
            p1->val += (p2->val + last);
            last = p1->val / 10;
            p1->val %= 10;
            newHead = p1;
            p1 = p1->next;
            p2 = p2->next;
        }
        if (p2) {
            newHead->next = p2;
            p1 = p2;//忘了在这里更新了，wa过一次
        }
        while (p1 && last) {
            p1->val += last;
            last = p1->val / 10;
            p1->val %= 10;
            newHead = p1;
            p1 = p1->next;
        }
        if (last) {
            newHead->next = new ListNode(last);
        }
        //newHead = reverse(l1);
        return l1;
    }
};

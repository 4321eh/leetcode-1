//https://leetcode.com/problems/regular-expression-matching/

/*易错点
// "" "c*"
// "aaa" ".*"
// "" "c*"
// "" "c*c*"

if (n < 1) {
            while (m > 1 && '*' == p[m - 1] && '*' != p[m - 2]) m -= 2;
            return 0 == m;
        }
        
        
for (int i = n - 1; i >= 0; --i) {
                if (s[i] != p[m - 2] && '.' != p[m - 2]) return false;
                if (isMatch(s.substr(0, i), p.substr(0, m - 2)))
                    return true;
            }
        

*/


class Solution {
public:
    bool isMatch(string s, string p) {
        int n = s.length();
        int m = p.length();
        if (n < 1 && m < 1) return true;
        if (m < 1) return false;
        if (n < 1) {
            while (m > 1 && '*' == p[m - 1] && '*' != p[m - 2]) m -= 2;
            return 0 == m;
        }
        if ('*' == p[m - 1]) {
            if (m < 2) return false;
            if (isMatch(s, p.substr(0, m - 2))) return true;
            for (int i = n - 1; i >= 0; --i) {
                if (s[i] != p[m - 2] && '.' != p[m - 2]) return false;
                if (isMatch(s.substr(0, i), p.substr(0, m - 2)))
                    return true;
            }
        }
        if ('.' == p[m - 1] || s[n - 1] == p[m - 1])
            return isMatch(s.substr(0, n - 1), p.substr(0, m - 1));
        return false;
    }
};

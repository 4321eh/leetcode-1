//https://leetcode.com/problems/flatten-binary-tree-to-linked-list/


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* helper(TreeNode* root) {
        if (NULL == root) return root;
        if (NULL == root->left && NULL == root->right) return root;
        if (NULL == root->left) return helper(root->right);
        TreeNode* p = root->right;
        root->right = root->left;
        root->left = NULL;
        if (NULL == p) return helper(root->right);
        TreeNode* last = helper(root->right);
        last->right = p;
        return helper(root->right);
    }
    void flatten(TreeNode* root) {
        helper(root);
    }
};

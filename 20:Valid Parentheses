
//https://leetcode.com/problems/valid-parentheses/


// 有些久了，这个题

class Solution {
public:
    bool isMatch(char c1, char c2) {
        int flag = 0;
        flag += '(' == c1 && ')' == c2;
        flag += '{' == c1 && '}' == c2;
        flag += '[' == c1 && ']' == c2;
        return flag;
    }
    bool helper(string& s, int first, int last) {
        if (first > last)
            return true;
            
        //if ('(' != s[first] && '{' != s[first] && '[' != s[first])//这里忘了
        //    return false;
        
        int count = 0;
        int mid = first;
        while (mid <= last) {
            if (s[mid] == s[first]) {
                count += 1;
            } else if (isMatch(s[first], s[mid])) {//这里顺序写错了。
                count -= 1;
            }
            if (0 == count)
                break;
            mid += 1;
        }
        if (count) 
            return false;
        return helper(s, first + 1, mid - 1) && helper(s, mid + 1, last);
    }
    bool isValid(string s) {
        return helper(s, 0, s.length() - 1);
    }
};

//https://leetcode.com/problems/binary-tree-inorder-traversal/

//关键是非递归的方法

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void helper(vector<int>& result, TreeNode* root) {
        if (NULL == root) return;
        helper(result, root->left);
        result.push_back(root->val);
        helper(result, root->right);
    }
    vector<int> inorderTraversal1(TreeNode* root) {
        vector<int> result;
        helper(result, root);
        return result;
    }
    vector<int> inorderTraversal(TreeNode* root) {
        stack<TreeNode* > s;
        TreeNode* p = root;
        vector<int> result;
        while (not s.empty() || p) {
            if (NULL == p) {
                p = s.top();
                s.pop();
                result.push_back(p->val);
                p = p->right;
                continue;
            }
            s.push(p);
            p = p->left;
        }
        return result;
    }
};

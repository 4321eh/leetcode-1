//https://leetcode.com/problems/merge-k-sorted-lists/

// 这个题不单要做对，还要做好!!!TEL过


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode* head = new ListNode(0);
        ListNode* p = head;
        while (l1 && l2) {
            if (l1->val < l2->val) {
                p->next = l1;
                l1 = l1->next;
            } else {
                p->next = l2;
                l2 = l2->next;
            }
            p = p->next;
        }
        if (l1)
            p->next = l1;
        if (l2)
            p->next = l2;
        return head->next;
    }
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        while (lists.size() > 10) {
            vector<ListNode*> temp;
            for (int i = 0; i < lists.size(); ++i) {
                if (i < lists.size() - 1) {
                    temp.push_back(mergeTwoLists(lists[i], lists[i + 1]));
                    i += 1;
                    continue;
                }
                temp.push_back(lists[i]);
            }
            lists = temp;
        }
        ListNode* head = NULL;
        for (int i = 0; i < lists.size(); ++i) 
            head = mergeTwoLists(head, lists[i]);
        return head;
    }
};
